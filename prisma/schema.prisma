generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  role          UserRole  @default(USER)
  demoLimit     Int       @default(5)
  demoUsed      Int       @default(0)
  lastDemoReset DateTime  @default(now())
  
  accounts      Account[]
  sessions      Session[]
  demos         Demo[]
}

model Demo {
  id          String   @id @default(cuid())
  userId      String
  inputImage  String   // URL of the input image
  outputImage String   // URL of the generated image
  status      Status   @default(COMPLETED)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model ContactSubmission {
  id          Int      @id @default(autoincrement())
  companyName String
  email       String
  message     String
  status      String   @default("pending")
  createdAt   DateTime @default(now())
}

enum UserRole {
  USER
  ADMIN
}

enum Status {
  PENDING
  PROCESSING
  COMPLETED
  FAILED
}
